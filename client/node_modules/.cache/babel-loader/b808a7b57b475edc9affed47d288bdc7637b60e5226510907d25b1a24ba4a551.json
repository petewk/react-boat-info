{"ast":null,"code":"import getSelectedBlocks from './getSelectedBlocks';\nexport default (function (strategy) {\n  return function (editorState, selection) {\n    var contentState = editorState.getCurrentContent();\n    var currentSelection = selection || editorState.getSelection();\n    var startKey = currentSelection.getStartKey();\n    var endKey = currentSelection.getEndKey();\n    var startOffset = currentSelection.getStartOffset();\n    var endOffset = currentSelection.getEndOffset();\n    var isSameBlock = startKey === endKey;\n    var selectedBlocks = getSelectedBlocks(contentState, startKey, endKey);\n    var entityFound = false; // We have to shift the offset to not get false positives when selecting\n    // a character just before or after an entity\n\n    var finalStartOffset = startOffset + 1;\n    var finalEndOffset = endOffset - 1;\n    selectedBlocks.forEach(function (block) {\n      strategy(block, function (start, end) {\n        if (entityFound) {\n          return;\n        }\n        var blockKey = block.getKey();\n        if (isSameBlock && (end < finalStartOffset || start > finalEndOffset)) {\n          return;\n        } else if (blockKey === startKey && end < finalStartOffset) {\n          return;\n        } else if (blockKey === endKey && start > finalEndOffset) {\n          return;\n        }\n        entityFound = true;\n      }, contentState);\n    });\n    return entityFound;\n  };\n});","map":{"version":3,"names":["getSelectedBlocks","strategy","editorState","selection","contentState","getCurrentContent","currentSelection","getSelection","startKey","getStartKey","endKey","getEndKey","startOffset","getStartOffset","endOffset","getEndOffset","isSameBlock","selectedBlocks","entityFound","finalStartOffset","finalEndOffset","forEach","block","start","end","blockKey","getKey"],"sources":["C:/Users/petew/OneDrive/Desktop/Web Dev Reboot/react-boat-info/client/node_modules/draft-js-utils/esm/selectionContainsEntity.js"],"sourcesContent":["import getSelectedBlocks from './getSelectedBlocks';\nexport default (function (strategy) {\n  return function (editorState, selection) {\n    var contentState = editorState.getCurrentContent();\n    var currentSelection = selection || editorState.getSelection();\n    var startKey = currentSelection.getStartKey();\n    var endKey = currentSelection.getEndKey();\n    var startOffset = currentSelection.getStartOffset();\n    var endOffset = currentSelection.getEndOffset();\n    var isSameBlock = startKey === endKey;\n    var selectedBlocks = getSelectedBlocks(contentState, startKey, endKey);\n    var entityFound = false; // We have to shift the offset to not get false positives when selecting\n    // a character just before or after an entity\n\n    var finalStartOffset = startOffset + 1;\n    var finalEndOffset = endOffset - 1;\n    selectedBlocks.forEach(function (block) {\n      strategy(block, function (start, end) {\n        if (entityFound) {\n          return;\n        }\n\n        var blockKey = block.getKey();\n\n        if (isSameBlock && (end < finalStartOffset || start > finalEndOffset)) {\n          return;\n        } else if (blockKey === startKey && end < finalStartOffset) {\n          return;\n        } else if (blockKey === endKey && start > finalEndOffset) {\n          return;\n        }\n\n        entityFound = true;\n      }, contentState);\n    });\n    return entityFound;\n  };\n});"],"mappings":"AAAA,OAAOA,iBAAiB,MAAM,qBAAqB;AACnD,gBAAgB,UAAUC,QAAQ,EAAE;EAClC,OAAO,UAAUC,WAAW,EAAEC,SAAS,EAAE;IACvC,IAAIC,YAAY,GAAGF,WAAW,CAACG,iBAAiB,EAAE;IAClD,IAAIC,gBAAgB,GAAGH,SAAS,IAAID,WAAW,CAACK,YAAY,EAAE;IAC9D,IAAIC,QAAQ,GAAGF,gBAAgB,CAACG,WAAW,EAAE;IAC7C,IAAIC,MAAM,GAAGJ,gBAAgB,CAACK,SAAS,EAAE;IACzC,IAAIC,WAAW,GAAGN,gBAAgB,CAACO,cAAc,EAAE;IACnD,IAAIC,SAAS,GAAGR,gBAAgB,CAACS,YAAY,EAAE;IAC/C,IAAIC,WAAW,GAAGR,QAAQ,KAAKE,MAAM;IACrC,IAAIO,cAAc,GAAGjB,iBAAiB,CAACI,YAAY,EAAEI,QAAQ,EAAEE,MAAM,CAAC;IACtE,IAAIQ,WAAW,GAAG,KAAK,CAAC,CAAC;IACzB;;IAEA,IAAIC,gBAAgB,GAAGP,WAAW,GAAG,CAAC;IACtC,IAAIQ,cAAc,GAAGN,SAAS,GAAG,CAAC;IAClCG,cAAc,CAACI,OAAO,CAAC,UAAUC,KAAK,EAAE;MACtCrB,QAAQ,CAACqB,KAAK,EAAE,UAAUC,KAAK,EAAEC,GAAG,EAAE;QACpC,IAAIN,WAAW,EAAE;UACf;QACF;QAEA,IAAIO,QAAQ,GAAGH,KAAK,CAACI,MAAM,EAAE;QAE7B,IAAIV,WAAW,KAAKQ,GAAG,GAAGL,gBAAgB,IAAII,KAAK,GAAGH,cAAc,CAAC,EAAE;UACrE;QACF,CAAC,MAAM,IAAIK,QAAQ,KAAKjB,QAAQ,IAAIgB,GAAG,GAAGL,gBAAgB,EAAE;UAC1D;QACF,CAAC,MAAM,IAAIM,QAAQ,KAAKf,MAAM,IAAIa,KAAK,GAAGH,cAAc,EAAE;UACxD;QACF;QAEAF,WAAW,GAAG,IAAI;MACpB,CAAC,EAAEd,YAAY,CAAC;IAClB,CAAC,CAAC;IACF,OAAOc,WAAW;EACpB,CAAC;AACH,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}