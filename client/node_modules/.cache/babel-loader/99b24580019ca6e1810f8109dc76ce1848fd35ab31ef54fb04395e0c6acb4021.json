{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\petew\\\\OneDrive\\\\Desktop\\\\Web Dev Reboot\\\\react-boat-info\\\\client\\\\src\\\\components\\\\displayEditor.js\";\nimport React, { useEffect, useState } from 'react';\nimport { Editor, EditorState, RichUtils, convertToRaw, convertFromRaw, convertFromHTML } from 'draft-js';\nimport { stateToHTML } from 'draft-js-export-html';\nimport '../App.css';\nimport '../../node_modules/draft-js/dist/Draft.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nclass DisplayEditor extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      editorState: EditorState.createEmpty()\n    };\n    this.onChange = editorState => this.setState({\n      editorState\n    });\n    this.previewText = this.previewText.bind(this);\n  }\n  previewText() {\n    const passedContent = convertFromHTML(this.props.currentState);\n    if (passedContent !== null) {\n      const contentState = convertFromRaw(passedContent);\n      const newEditorState = EditorState.createWithContent(contentState);\n      this.setState({\n        editorState: newEditorState\n      });\n    }\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.previewText,\n        children: \"Preview\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"displayDiv\",\n        children: /*#__PURE__*/_jsxDEV(Editor, {\n          editorState: this.state.editorState,\n          onChange: this.onChange,\n          readOnly: \"true\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true);\n  }\n}\n;\nexport default DisplayEditor;","map":{"version":3,"names":["React","useEffect","useState","Editor","EditorState","RichUtils","convertToRaw","convertFromRaw","convertFromHTML","stateToHTML","DisplayEditor","Component","constructor","props","state","editorState","createEmpty","onChange","setState","previewText","bind","passedContent","currentState","contentState","newEditorState","createWithContent","render"],"sources":["C:/Users/petew/OneDrive/Desktop/Web Dev Reboot/react-boat-info/client/src/components/displayEditor.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Editor, EditorState, RichUtils, convertToRaw, convertFromRaw, convertFromHTML } from 'draft-js';\r\nimport {stateToHTML} from 'draft-js-export-html';\r\nimport '../App.css';\r\nimport '../../node_modules/draft-js/dist/Draft.css';\r\n\r\n\r\nclass DisplayEditor extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        \r\n        this.state = {\r\n            editorState: EditorState.createEmpty()\r\n        };\r\n        this.onChange = (editorState) => this.setState({editorState});\r\n        this.previewText = this.previewText.bind(this);\r\n\r\n    }\r\n\r\n    previewText(){\r\n        const passedContent = convertFromHTML(this.props.currentState);\r\n        if (passedContent !== null){\r\n            const contentState = convertFromRaw(passedContent);\r\n            const newEditorState = EditorState.createWithContent(contentState);\r\n            this.setState({\r\n                editorState: newEditorState\r\n            })\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <>\r\n            <button onClick={this.previewText}>Preview</button>\r\n            <div id=\"displayDiv\">\r\n                \r\n                <Editor \r\n                editorState={this.state.editorState} \r\n                onChange={this.onChange} \r\n                readOnly='true'\r\n                />\r\n            </div>\r\n            </>\r\n        )\r\n    };\r\n\r\n};\r\n\r\nexport default DisplayEditor;"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,MAAM,EAAEC,WAAW,EAAEC,SAAS,EAAEC,YAAY,EAAEC,cAAc,EAAEC,eAAe,QAAQ,UAAU;AACxG,SAAQC,WAAW,QAAO,sBAAsB;AAChD,OAAO,YAAY;AACnB,OAAO,4CAA4C;AAAC;AAAA;AAGpD,MAAMC,aAAa,SAASV,KAAK,CAACW,SAAS,CAAC;EACxCC,WAAW,CAACC,KAAK,EAAC;IACd,KAAK,CAACA,KAAK,CAAC;IAEZ,IAAI,CAACC,KAAK,GAAG;MACTC,WAAW,EAAEX,WAAW,CAACY,WAAW;IACxC,CAAC;IACD,IAAI,CAACC,QAAQ,GAAIF,WAAW,IAAK,IAAI,CAACG,QAAQ,CAAC;MAACH;IAAW,CAAC,CAAC;IAC7D,IAAI,CAACI,WAAW,GAAG,IAAI,CAACA,WAAW,CAACC,IAAI,CAAC,IAAI,CAAC;EAElD;EAEAD,WAAW,GAAE;IACT,MAAME,aAAa,GAAGb,eAAe,CAAC,IAAI,CAACK,KAAK,CAACS,YAAY,CAAC;IAC9D,IAAID,aAAa,KAAK,IAAI,EAAC;MACvB,MAAME,YAAY,GAAGhB,cAAc,CAACc,aAAa,CAAC;MAClD,MAAMG,cAAc,GAAGpB,WAAW,CAACqB,iBAAiB,CAACF,YAAY,CAAC;MAClE,IAAI,CAACL,QAAQ,CAAC;QACVH,WAAW,EAAES;MACjB,CAAC,CAAC;IACN;EACJ;EAEAE,MAAM,GAAE;IACJ,oBACI;MAAA,wBACA;QAAQ,OAAO,EAAE,IAAI,CAACP,WAAY;QAAA,UAAC;MAAO;QAAA;QAAA;QAAA;MAAA,QAAS,eACnD;QAAK,EAAE,EAAC,YAAY;QAAA,uBAEhB,QAAC,MAAM;UACP,WAAW,EAAE,IAAI,CAACL,KAAK,CAACC,WAAY;UACpC,QAAQ,EAAE,IAAI,CAACE,QAAS;UACxB,QAAQ,EAAC;QAAM;UAAA;UAAA;UAAA;QAAA;MACb;QAAA;QAAA;QAAA;MAAA,QACA;IAAA,gBACH;EAEX;AAEJ;AAAC;AAED,eAAeP,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}