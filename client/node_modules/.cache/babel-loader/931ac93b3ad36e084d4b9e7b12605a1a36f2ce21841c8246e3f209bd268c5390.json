{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\petew\\\\OneDrive\\\\Desktop\\\\Web Dev Reboot\\\\react-boat-info\\\\client\\\\src\\\\components\\\\Lexical\\\\ToolbarPlugin.js\",\n  _s = $RefreshSig$();\nimport { useLexicalComposerContext } from \"@lexical/react/LexicalComposerContext\";\nimport * as React from \"react\";\nimport \"../styles.css\";\nimport { INSERT_IMAGE_COMMAND } from \"./ImagePlugin\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function FillURL() {\n  const srcfile = prompt(\"Enter the URL of the image:\", \"\");\n  return srcfile;\n}\n_c = FillURL;\nexport default function ToolbarPlugin() {\n  _s();\n  const [editor] = useLexicalComposerContext();\n  const onClick = payload => {\n    editor.dispatchCommand(INSERT_IMAGE_COMMAND, payload);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"toolbar\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => onClick({\n          altText: \"URL image\",\n          src: FillURL()\n        }),\n        className: \"toolbar-item spaced \",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text\",\n          children: \"Insert from URL\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n}\n_s(ToolbarPlugin, \"MUJTZ3t3NKyXWeKoJUbyWHO70Z4=\", false, function () {\n  return [useLexicalComposerContext];\n});\n_c2 = ToolbarPlugin;\nvar _c, _c2;\n$RefreshReg$(_c, \"FillURL\");\n$RefreshReg$(_c2, \"ToolbarPlugin\");","map":{"version":3,"names":["useLexicalComposerContext","React","INSERT_IMAGE_COMMAND","FillURL","srcfile","prompt","ToolbarPlugin","editor","onClick","payload","dispatchCommand","altText","src"],"sources":["C:/Users/petew/OneDrive/Desktop/Web Dev Reboot/react-boat-info/client/src/components/Lexical/ToolbarPlugin.js"],"sourcesContent":["import { useLexicalComposerContext } from \"@lexical/react/LexicalComposerContext\";\r\nimport * as React from \"react\";\r\n\r\nimport \"../styles.css\";\r\n\r\nimport type { InsertImagePayload } from \"./ImagePlugin\";\r\nimport { INSERT_IMAGE_COMMAND } from \"./ImagePlugin\";\r\n\r\nexport function FillURL() {\r\n  const srcfile = prompt(\"Enter the URL of the image:\", \"\");\r\n\r\n  return srcfile;\r\n}\r\n\r\nexport default function ToolbarPlugin(): JSX.Element {\r\n  const [editor] = useLexicalComposerContext();\r\n  const onClick = (payload: InsertImagePayload) => {\r\n    editor.dispatchCommand(INSERT_IMAGE_COMMAND, payload);\r\n  };\r\n\r\n  return (\r\n    <>\r\n    <div className=\"toolbar\">\r\n      <button\r\n          onClick={() => onClick({\r\n              altText: \"URL image\",\r\n              src: FillURL()\r\n          })}\r\n          className={\"toolbar-item spaced \"}>\r\n              <span className=\"text\">Insert from URL</span>\r\n          </button>\r\n    </div>\r\n    </>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,SAASA,yBAAyB,QAAQ,uCAAuC;AACjF,OAAO,KAAKC,KAAK,MAAM,OAAO;AAE9B,OAAO,eAAe;AAGtB,SAASC,oBAAoB,QAAQ,eAAe;AAAC;AAAA;AAErD,OAAO,SAASC,OAAO,GAAG;EACxB,MAAMC,OAAO,GAAGC,MAAM,CAAC,6BAA6B,EAAE,EAAE,CAAC;EAEzD,OAAOD,OAAO;AAChB;AAAC,KAJeD,OAAO;AAMvB,eAAe,SAASG,aAAa,GAAgB;EAAA;EACnD,MAAM,CAACC,MAAM,CAAC,GAAGP,yBAAyB,EAAE;EAC5C,MAAMQ,OAAO,GAAIC,OAA2B,IAAK;IAC/CF,MAAM,CAACG,eAAe,CAACR,oBAAoB,EAAEO,OAAO,CAAC;EACvD,CAAC;EAED,oBACE;IAAA,uBACA;MAAK,SAAS,EAAC,SAAS;MAAA,uBACtB;QACI,OAAO,EAAE,MAAMD,OAAO,CAAC;UACnBG,OAAO,EAAE,WAAW;UACpBC,GAAG,EAAET,OAAO;QAChB,CAAC,CAAE;QACH,SAAS,EAAE,sBAAuB;QAAA,uBAC9B;UAAM,SAAS,EAAC,MAAM;UAAA,UAAC;QAAe;UAAA;UAAA;UAAA;QAAA;MAAO;QAAA;QAAA;QAAA;MAAA;IACxC;MAAA;MAAA;MAAA;IAAA;EACT,iBACH;AAEP;AAAC,GApBuBG,aAAa;EAAA,QAClBN,yBAAyB;AAAA;AAAA,MADpBM,aAAa;AAAA;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}