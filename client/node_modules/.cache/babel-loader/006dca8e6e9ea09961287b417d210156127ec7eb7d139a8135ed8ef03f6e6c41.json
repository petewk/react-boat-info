{"ast":null,"code":"import { Mark, mergeAttributes } from '@tiptap/core';\nvar Underline = Mark.create({\n  name: 'underline',\n  addOptions: function addOptions() {\n    return {\n      HTMLAttributes: {}\n    };\n  },\n  parseHTML: function parseHTML() {\n    return [{\n      tag: 'u'\n    }, {\n      style: 'text-decoration',\n      consuming: false,\n      getAttrs: function getAttrs(style) {\n        return style.includes('underline') ? {} : false;\n      }\n    }];\n  },\n  renderHTML: function renderHTML(_ref) {\n    var HTMLAttributes = _ref.HTMLAttributes;\n    return ['u', mergeAttributes(this.options.HTMLAttributes, HTMLAttributes), 0];\n  },\n  addCommands: function addCommands() {\n    var _this = this;\n    return {\n      setUnderline: function setUnderline() {\n        return function (_ref2) {\n          var commands = _ref2.commands;\n          return commands.setMark(_this.name);\n        };\n      },\n      toggleUnderline: function toggleUnderline() {\n        return function (_ref3) {\n          var commands = _ref3.commands;\n          return commands.toggleMark(_this.name);\n        };\n      },\n      unsetUnderline: function unsetUnderline() {\n        return function (_ref4) {\n          var commands = _ref4.commands;\n          return commands.unsetMark(_this.name);\n        };\n      }\n    };\n  },\n  addKeyboardShortcuts: function addKeyboardShortcuts() {\n    var _this2 = this;\n    return {\n      'Mod-u': function ModU() {\n        return _this2.editor.commands.toggleUnderline();\n      },\n      'Mod-U': function ModU() {\n        return _this2.editor.commands.toggleUnderline();\n      }\n    };\n  }\n});\nexport { Underline, Underline as default };","map":{"version":3,"mappings":";AAyBa,aAAS,GAAGA,IAAI,CAACC,MAAM,CAAmB;EACrDC,IAAI,EAAE,WAAW;EAEjBC,UAAU;IACR,OAAO;MACLC,cAAc,EAAE;KACjB;GACF;EAEDC,SAAS;IACP,OAAO,CACL;MACEC,GAAG,EAAE;IACN,GACD;MACEC,KAAK,EAAE,iBAAiB;MACxBC,SAAS,EAAE,KAAK;MAChBC,QAAQ,EAAE,uBAAK;QAAA,OAAMF,KAAgB,CAACG,QAAQ,CAAC,WAAW,CAAC,GAAG,EAAE,GAAG,KAAK;MAAA;IACzE,EACF;GACF;EAEDC,UAAU,4BAAmB;IAAA,IAAhBP,cAAc,QAAdA,cAAc;IACzB,OAAO,CAAC,GAAG,EAAEQ,eAAe,CAAC,IAAI,CAACC,OAAO,CAACT,cAAc,EAAEA,cAAc,CAAC,EAAE,CAAC,CAAC;GAC9E;EAEDU,WAAW;IAAA;IACT,OAAO;MACLC,YAAY,EAAE;QAAA,OAAM,iBAAiB;UAAA,IAAdC,QAAQ,SAARA,QAAQ;UAC7B,OAAOA,QAAQ,CAACC,OAAO,CAAC,KAAI,CAACf,IAAI,CAAC;SACnC;MAAA;MACDgB,eAAe,EAAE;QAAA,OAAM,iBAAiB;UAAA,IAAdF,QAAQ,SAARA,QAAQ;UAChC,OAAOA,QAAQ,CAACG,UAAU,CAAC,KAAI,CAACjB,IAAI,CAAC;SACtC;MAAA;MACDkB,cAAc,EAAE;QAAA,OAAM,iBAAiB;UAAA,IAAdJ,QAAQ,SAARA,QAAQ;UAC/B,OAAOA,QAAQ,CAACK,SAAS,CAAC,KAAI,CAACnB,IAAI,CAAC;SACrC;MAAA;KACF;GACF;EAEDoB,oBAAoB;IAAA;IAClB,OAAO;MACL,OAAO,EAAE;QAAA,OAAM,MAAI,CAACC,MAAM,CAACP,QAAQ,CAACE,eAAe,EAAE;MAAA;MACrD,OAAO,EAAE;QAAA,OAAM,MAAI,CAACK,MAAM,CAACP,QAAQ,CAACE,eAAe,EAAE;MAAA;KACtD;;AAEJ","names":["Mark","create","name","addOptions","HTMLAttributes","parseHTML","tag","style","consuming","getAttrs","includes","renderHTML","mergeAttributes","options","addCommands","setUnderline","commands","setMark","toggleUnderline","toggleMark","unsetUnderline","unsetMark","addKeyboardShortcuts","editor"],"sources":["C:\\Users\\petew\\OneDrive\\Desktop\\Web Dev Reboot\\react-boat-info\\client\\node_modules\\@tiptap\\extension-underline\\src\\underline.ts"],"sourcesContent":["import { Mark, mergeAttributes } from '@tiptap/core'\n\nexport interface UnderlineOptions {\n  HTMLAttributes: Record<string, any>,\n}\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    underline: {\n      /**\n       * Set an underline mark\n       */\n      setUnderline: () => ReturnType,\n      /**\n       * Toggle an underline mark\n       */\n      toggleUnderline: () => ReturnType,\n      /**\n       * Unset an underline mark\n       */\n      unsetUnderline: () => ReturnType,\n    }\n  }\n}\n\nexport const Underline = Mark.create<UnderlineOptions>({\n  name: 'underline',\n\n  addOptions() {\n    return {\n      HTMLAttributes: {},\n    }\n  },\n\n  parseHTML() {\n    return [\n      {\n        tag: 'u',\n      },\n      {\n        style: 'text-decoration',\n        consuming: false,\n        getAttrs: style => ((style as string).includes('underline') ? {} : false),\n      },\n    ]\n  },\n\n  renderHTML({ HTMLAttributes }) {\n    return ['u', mergeAttributes(this.options.HTMLAttributes, HTMLAttributes), 0]\n  },\n\n  addCommands() {\n    return {\n      setUnderline: () => ({ commands }) => {\n        return commands.setMark(this.name)\n      },\n      toggleUnderline: () => ({ commands }) => {\n        return commands.toggleMark(this.name)\n      },\n      unsetUnderline: () => ({ commands }) => {\n        return commands.unsetMark(this.name)\n      },\n    }\n  },\n\n  addKeyboardShortcuts() {\n    return {\n      'Mod-u': () => this.editor.commands.toggleUnderline(),\n      'Mod-U': () => this.editor.commands.toggleUnderline(),\n    }\n  },\n})\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}