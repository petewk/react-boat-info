{"ast":null,"code":"import { Node, mergeAttributes } from '@tiptap/core';\nconst TableCell = Node.create({\n  name: 'tableCell',\n  addOptions() {\n    return {\n      HTMLAttributes: {}\n    };\n  },\n  content: 'block+',\n  addAttributes() {\n    return {\n      colspan: {\n        default: 1\n      },\n      rowspan: {\n        default: 1\n      },\n      colwidth: {\n        default: null,\n        parseHTML: element => {\n          const colwidth = element.getAttribute('colwidth');\n          const value = colwidth ? [parseInt(colwidth, 10)] : null;\n          return value;\n        }\n      }\n    };\n  },\n  tableRole: 'cell',\n  isolating: true,\n  parseHTML() {\n    return [{\n      tag: 'td'\n    }];\n  },\n  renderHTML(_ref) {\n    let {\n      HTMLAttributes\n    } = _ref;\n    return ['td', mergeAttributes(this.options.HTMLAttributes, HTMLAttributes), 0];\n  }\n});\nexport { TableCell, TableCell as default };","map":{"version":3,"names":["TableCell","Node","create","name","addOptions","HTMLAttributes","content","addAttributes","colspan","default","rowspan","colwidth","parseHTML","element","getAttribute","value","parseInt","tableRole","isolating","tag","renderHTML","_ref","mergeAttributes","options"],"sources":["C:\\Users\\petew\\OneDrive\\Desktop\\Web Dev Reboot\\react-boat-info\\client\\node_modules\\@tiptap\\extension-table-cell\\src\\table-cell.ts"],"sourcesContent":["import { mergeAttributes, Node } from '@tiptap/core'\n\nexport interface TableCellOptions {\n  HTMLAttributes: Record<string, any>,\n}\n\nexport const TableCell = Node.create<TableCellOptions>({\n  name: 'tableCell',\n\n  addOptions() {\n    return {\n      HTMLAttributes: {},\n    }\n  },\n\n  content: 'block+',\n\n  addAttributes() {\n    return {\n      colspan: {\n        default: 1,\n      },\n      rowspan: {\n        default: 1,\n      },\n      colwidth: {\n        default: null,\n        parseHTML: element => {\n          const colwidth = element.getAttribute('colwidth')\n          const value = colwidth\n            ? [parseInt(colwidth, 10)]\n            : null\n\n          return value\n        },\n      },\n    }\n  },\n\n  tableRole: 'cell',\n\n  isolating: true,\n\n  parseHTML() {\n    return [\n      { tag: 'td' },\n    ]\n  },\n\n  renderHTML({ HTMLAttributes }) {\n    return ['td', mergeAttributes(this.options.HTMLAttributes, HTMLAttributes), 0]\n  },\n\n})\n"],"mappings":";AAMa,MAAAA,SAAS,GAAGC,IAAI,CAACC,MAAM,CAAmB;EACrDC,IAAI,EAAE,WAAW;EAEjBC,UAAUA,CAAA;IACR,OAAO;MACLC,cAAc,EAAE;KACjB;GACF;EAEDC,OAAO,EAAE,QAAQ;EAEjBC,aAAaA,CAAA;IACX,OAAO;MACLC,OAAO,EAAE;QACPC,OAAO,EAAE;MACV;MACDC,OAAO,EAAE;QACPD,OAAO,EAAE;MACV;MACDE,QAAQ,EAAE;QACRF,OAAO,EAAE,IAAI;QACbG,SAAS,EAAEC,OAAO,IAAG;UACnB,MAAMF,QAAQ,GAAGE,OAAO,CAACC,YAAY,CAAC,UAAU,CAAC;UACjD,MAAMC,KAAK,GAAGJ,QAAQ,GAClB,CAACK,QAAQ,CAACL,QAAQ,EAAE,EAAE,CAAC,CAAC,GACxB,IAAI;UAER,OAAOI,KAAK;;MAEf;KACF;GACF;EAEDE,SAAS,EAAE,MAAM;EAEjBC,SAAS,EAAE,IAAI;EAEfN,SAASA,CAAA;IACP,OAAO,CACL;MAAEO,GAAG,EAAE;IAAI,CAAE,CACd;GACF;EAEDC,UAAUA,CAAAC,IAAA,EAAmB;IAAA,IAAlB;MAAEhB;IAAc,CAAE,GAAAgB,IAAA;IAC3B,OAAO,CAAC,IAAI,EAAEC,eAAe,CAAC,IAAI,CAACC,OAAO,CAAClB,cAAc,EAAEA,cAAc,CAAC,EAAE,CAAC,CAAC;;AAGjF"},"metadata":{},"sourceType":"module","externalDependencies":[]}