{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\petew\\\\OneDrive\\\\Desktop\\\\Web Dev Reboot\\\\react-boat-info\\\\client\\\\src\\\\components\\\\editor.js\";\nimport React, { useEffect, useState } from 'react';\nimport { Editor, EditorState, RichUtils, convertToRaw, convertFromRaw } from 'draft-js';\nimport { stateToHTML } from 'draft-js-export-html';\nimport '../App.css';\nimport '../../node_modules/draft-js/dist/Draft.css';\nimport DisplayEditor from './displayEditor.js';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nclass MyEditor extends React.Component {\n  constructor(props) {\n    super(props);\n    this.insertImage = url => {\n      const contentState = editorState.getCurrentContent();\n      const contentStateWithEntity = contentState.createEntity('IMAGE', 'IMMUTABLE', {\n        src: url\n      });\n      const entityKey = contentStateWithEntity.getLastCreatedEntityKey();\n      const newEditorState = EditorState.set(editorState, {\n        currentContent: contentStateWithEntity\n      });\n      return AtomicBlockUtils.insertAtomicBlock(newEditorState, entityKey, '');\n    };\n    this.HandlePastedFiles = files => {\n      const formData = new FormData();\n      formData.append('file', files[0]);\n      fetch('/api/uploads', {\n        method: 'POST',\n        body: formData\n      }).then(res => res.json()).then(data => {\n        if (data.file) {\n          setEditorState(insertImage(data.file)); //created below\n        }\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n    this.state = {\n      editorState: EditorState.createEmpty()\n    };\n    this.onChange = editorState => this.setState({\n      editorState\n    });\n    this.saveContent = this.saveContent.bind(this);\n    this.loadcontent = this.loadContent.bind(this);\n    this.setEditorContent = this.setEditorContent.bind(this);\n    this.gettoHTML = this.gettoHTML.bind(this);\n    this.HandlePastedFiles = this.HandlePastedFiles.bind(this);\n  }\n  handleKeyCommand(command) {\n    const {\n      editorState\n    } = this.state;\n    const newState = RichUtils.handleKeyCommand(editorState, command);\n    if (newState) {\n      this.onChange(newState);\n      return true;\n    }\n    return false;\n  }\n  getRaw() {\n    const contentState = this.state.editorState.getCurrentContent();\n    const raw = convertToRaw(contentState);\n    return JSON.stringify(raw, null, 2);\n  }\n  saveContent() {\n    const jsontoSave = this.getRaw();\n    const input = document.getElementById('hiddenForm');\n    input.value = JSON.stringify(jsontoSave);\n    localStorage.setItem('draftEditorContent', jsontoSave);\n    console.log(\"saved\");\n  }\n  loadContent() {\n    const savedData = localStorage.getItem('draftEditorContent');\n    return savedData ? JSON.parse(savedData) : null;\n  }\n  gettoHTML() {\n    const contentState = this.state.editorState.getCurrentContent();\n    return stateToHTML(contentState);\n  }\n  setEditorContent(content) {\n    const rawEditorData = this.loadContent();\n    if (rawEditorData !== null) {\n      const contentState = convertFromRaw(rawEditorData);\n      const newEditorState = EditorState.createWithContent(contentState);\n      this.setState({\n        editorState: newEditorState\n      });\n    }\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        action: \"http://localhost:5000/rich\",\n        method: \"POST\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"hiddenForm\",\n          name: \"hiddenForm\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"nameInput\",\n          name: \"fileName\",\n          placeholder: \"-- Page Title --\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n          children: \"(The page title will show as the index link for the page)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"buttonsDiv\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: () => this.handleKeyCommand(\"bold\"),\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fa-solid fa-bold xl\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 91\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: () => this.handleKeyCommand(\"italic\"),\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fa-solid fa-italic\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 93\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: () => this.handleKeyCommand(\"underline\"),\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fa-solid fa-underline\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 96\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: () => this.handleKeyCommand(\"code\"),\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fa-solid fa-code\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 91\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"editorDiv\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              height: 'inherit'\n            },\n            children: /*#__PURE__*/_jsxDEV(Editor, {\n              style: {\n                height: 'inherit'\n              },\n              editorState: this.state.editorState,\n              onChange: this.onChange,\n              handleKeyCommand: this.handleKeyCommand.bind(this),\n              placeholder: \"Type out your text body here\",\n              HandlePastedFiles: this.HandlePastedFiles\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.saveContent,\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 17\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 66\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this)\n    }, void 0, false);\n  }\n}\nexport default MyEditor;","map":{"version":3,"names":["React","useEffect","useState","Editor","EditorState","RichUtils","convertToRaw","convertFromRaw","stateToHTML","DisplayEditor","FontAwesomeIcon","MyEditor","Component","constructor","props","insertImage","url","contentState","editorState","getCurrentContent","contentStateWithEntity","createEntity","src","entityKey","getLastCreatedEntityKey","newEditorState","set","currentContent","AtomicBlockUtils","insertAtomicBlock","HandlePastedFiles","files","formData","FormData","append","fetch","method","body","then","res","json","data","file","setEditorState","catch","err","console","log","state","createEmpty","onChange","setState","saveContent","bind","loadcontent","loadContent","setEditorContent","gettoHTML","handleKeyCommand","command","newState","getRaw","raw","JSON","stringify","jsontoSave","input","document","getElementById","value","localStorage","setItem","savedData","getItem","parse","content","rawEditorData","createWithContent","render","height"],"sources":["C:/Users/petew/OneDrive/Desktop/Web Dev Reboot/react-boat-info/client/src/components/editor.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Editor, EditorState, RichUtils, convertToRaw, convertFromRaw } from 'draft-js';\r\nimport {stateToHTML} from 'draft-js-export-html';\r\nimport '../App.css';\r\nimport '../../node_modules/draft-js/dist/Draft.css';\r\nimport DisplayEditor from './displayEditor.js';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nclass MyEditor extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            editorState: EditorState.createEmpty()\r\n        };\r\n        this.onChange = (editorState) => this.setState({editorState});\r\n        this.saveContent = this.saveContent.bind(this);\r\n        this.loadcontent = this.loadContent.bind(this);\r\n        this.setEditorContent = this.setEditorContent.bind(this);\r\n        this.gettoHTML = this.gettoHTML.bind(this);\r\n        this.HandlePastedFiles = this.HandlePastedFiles.bind(this);\r\n    }\r\n    handleKeyCommand(command){\r\n        const { editorState } = this.state;\r\n        const newState = RichUtils.handleKeyCommand(editorState, command);\r\n        if (newState) {\r\n            this.onChange(newState);\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n    getRaw(){\r\n        const contentState = this.state.editorState.getCurrentContent();\r\n        const raw = convertToRaw(contentState);\r\n        return JSON.stringify(raw, null, 2);\r\n    }\r\n\r\n    saveContent(){\r\n        const jsontoSave = this.getRaw();\r\n        const input = document.getElementById('hiddenForm');\r\n        input.value = JSON.stringify(jsontoSave);\r\n        localStorage.setItem('draftEditorContent', jsontoSave);\r\n        console.log(\"saved\")\r\n    }\r\n\r\n    loadContent(){\r\n        const savedData = localStorage.getItem('draftEditorContent');\r\n        return savedData ? JSON.parse(savedData) : null;\r\n    }\r\n\r\n    gettoHTML(){\r\n        const contentState = this.state.editorState.getCurrentContent();\r\n        return stateToHTML(contentState);\r\n    }\r\n\r\n    setEditorContent(content){\r\n        const rawEditorData = this.loadContent();\r\n        if (rawEditorData !== null){\r\n            const contentState = convertFromRaw(rawEditorData);\r\n            const newEditorState = EditorState.createWithContent(contentState);\r\n            this.setState({\r\n                editorState: newEditorState\r\n            })\r\n        }\r\n    }\r\n\r\n    insertImage = ( url) => {\r\n        const contentState = editorState.getCurrentContent();\r\n        const contentStateWithEntity = contentState.createEntity(\r\n            'IMAGE',\r\n            'IMMUTABLE',\r\n            { src: url },)\r\n    const entityKey = contentStateWithEntity.getLastCreatedEntityKey();\r\n    const newEditorState = EditorState.set( editorState, { currentContent: contentStateWithEntity });\r\n    return AtomicBlockUtils.insertAtomicBlock(newEditorState, entityKey, '');\r\n    };\r\n\r\n    HandlePastedFiles = ( files) => {\r\n        const formData = new FormData();\r\n        formData.append('file',files[0]) \r\n        fetch('/api/uploads', \r\n        {method: 'POST', body: formData})\r\n        .then(res => res.json())\r\n        .then(data => {\r\n          if (data.file) { \r\n             setEditorState(insertImage(data.file)) //created below\r\n          }\r\n        }).catch(err => {\r\n            console.log(err) \r\n        })\r\n     }\r\n\r\n    \r\n\r\n\r\n    render(){\r\n        return(\r\n            <>\r\n                <form action=\"http://localhost:5000/rich\" method=\"POST\">\r\n\r\n                    <input id=\"hiddenForm\" name=\"hiddenForm\"></input>\r\n                    <input id=\"nameInput\" name=\"fileName\" placeholder='-- Page Title --'></input>\r\n                    <h5>(The page title will show as the index link for the page)</h5>\r\n\r\n             \r\n                    <div id=\"buttonsDiv\">\r\n                        <button type=\"button\" onClick={()=>this.handleKeyCommand(\"bold\")}><i className=\"fa-solid fa-bold xl\"></i></button>\r\n                        <button type=\"button\" onClick={()=>this.handleKeyCommand(\"italic\")}><i className=\"fa-solid fa-italic\"></i></button>\r\n                        <button type=\"button\" onClick={()=>this.handleKeyCommand(\"underline\")}><i className=\"fa-solid fa-underline\"></i></button>\r\n                        <button type=\"button\" onClick={()=>this.handleKeyCommand(\"code\")}><i className=\"fa-solid fa-code\"></i></button>\r\n                    </div>\r\n\r\n                <div id=\"editorDiv\">\r\n                    \r\n                    <div style={{height: 'inherit'}}>\r\n                        <Editor \r\n                            style={{height: 'inherit'}}\r\n                            editorState={this.state.editorState} \r\n                            onChange={this.onChange} \r\n                            handleKeyCommand={this.handleKeyCommand.bind(this)}\r\n                            placeholder=\"Type out your text body here\"\r\n                            HandlePastedFiles={this.HandlePastedFiles}\r\n                            />\r\n\r\n                    </div>\r\n\r\n\r\n                </div>\r\n                {/* <DisplayEditor currentState={this.gettoHTML()}/> <br /> */}\r\n                <button onClick={this.saveContent}>Save</button> <br />\r\n                </form>\r\n                \r\n\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default MyEditor;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}