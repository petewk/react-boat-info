{"ast":null,"code":"import { Node, mergeAttributes, wrappingInputRule } from '@tiptap/core';\nconst inputRegex = /^\\s*>\\s$/;\nconst Blockquote = Node.create({\n  name: 'blockquote',\n  addOptions() {\n    return {\n      HTMLAttributes: {}\n    };\n  },\n  content: 'block+',\n  group: 'block',\n  defining: true,\n  parseHTML() {\n    return [{\n      tag: 'blockquote'\n    }];\n  },\n  renderHTML(_ref) {\n    let {\n      HTMLAttributes\n    } = _ref;\n    return ['blockquote', mergeAttributes(this.options.HTMLAttributes, HTMLAttributes), 0];\n  },\n  addCommands() {\n    return {\n      setBlockquote: () => _ref2 => {\n        let {\n          commands\n        } = _ref2;\n        return commands.wrapIn(this.name);\n      },\n      toggleBlockquote: () => _ref3 => {\n        let {\n          commands\n        } = _ref3;\n        return commands.toggleWrap(this.name);\n      },\n      unsetBlockquote: () => _ref4 => {\n        let {\n          commands\n        } = _ref4;\n        return commands.lift(this.name);\n      }\n    };\n  },\n  addKeyboardShortcuts() {\n    return {\n      'Mod-Shift-b': () => this.editor.commands.toggleBlockquote()\n    };\n  },\n  addInputRules() {\n    return [wrappingInputRule({\n      find: inputRegex,\n      type: this.type\n    })];\n  }\n});\nexport { Blockquote, Blockquote as default, inputRegex };","map":{"version":3,"mappings":";AAyBO,MAAMA,UAAU,GAAG;AAEb,gBAAU,GAAGC,IAAI,CAACC,MAAM,CAAoB;EAEvDC,IAAI,EAAE,YAAY;EAElBC,UAAU;IACR,OAAO;MACLC,cAAc,EAAE;KACjB;GACF;EAEDC,OAAO,EAAE,QAAQ;EAEjBC,KAAK,EAAE,OAAO;EAEdC,QAAQ,EAAE,IAAI;EAEdC,SAAS;IACP,OAAO,CACL;MAAEC,GAAG,EAAE;IAAY,CAAE,CACtB;GACF;EAEDC,UAAU,OAAmB;IAAA,IAAlB;MAAEN;IAAc,CAAE;IAC3B,OAAO,CAAC,YAAY,EAAEO,eAAe,CAAC,IAAI,CAACC,OAAO,CAACR,cAAc,EAAEA,cAAc,CAAC,EAAE,CAAC,CAAC;GACvF;EAEDS,WAAW;IACT,OAAO;MACLC,aAAa,EAAE,MAAM,SAAiB;QAAA,IAAhB;UAAEC;QAAQ,CAAE;QAChC,OAAOA,QAAQ,CAACC,MAAM,CAAC,IAAI,CAACd,IAAI,CAAC;OAClC;MACDe,gBAAgB,EAAE,MAAM,SAAiB;QAAA,IAAhB;UAAEF;QAAQ,CAAE;QACnC,OAAOA,QAAQ,CAACG,UAAU,CAAC,IAAI,CAAChB,IAAI,CAAC;OACtC;MACDiB,eAAe,EAAE,MAAM,SAAiB;QAAA,IAAhB;UAAEJ;QAAQ,CAAE;QAClC,OAAOA,QAAQ,CAACK,IAAI,CAAC,IAAI,CAAClB,IAAI,CAAC;;KAElC;GACF;EAEDmB,oBAAoB;IAClB,OAAO;MACL,aAAa,EAAE,MAAM,IAAI,CAACC,MAAM,CAACP,QAAQ,CAACE,gBAAgB;KAC3D;GACF;EAEDM,aAAa;IACX,OAAO,CACLC,iBAAiB,CAAC;MAChBC,IAAI,EAAE1B,UAAU;MAChB2B,IAAI,EAAE,IAAI,CAACA;KACZ,CAAC,CACH;;AAEJ","names":["inputRegex","Node","create","name","addOptions","HTMLAttributes","content","group","defining","parseHTML","tag","renderHTML","mergeAttributes","options","addCommands","setBlockquote","commands","wrapIn","toggleBlockquote","toggleWrap","unsetBlockquote","lift","addKeyboardShortcuts","editor","addInputRules","wrappingInputRule","find","type"],"sources":["C:\\Users\\petew\\OneDrive\\Desktop\\Web Dev Reboot\\react-boat-info\\client\\node_modules\\@tiptap\\extension-blockquote\\src\\blockquote.ts"],"sourcesContent":["import { mergeAttributes, Node, wrappingInputRule } from '@tiptap/core'\n\nexport interface BlockquoteOptions {\n  HTMLAttributes: Record<string, any>,\n}\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    blockQuote: {\n      /**\n       * Set a blockquote node\n       */\n      setBlockquote: () => ReturnType,\n      /**\n       * Toggle a blockquote node\n       */\n      toggleBlockquote: () => ReturnType,\n      /**\n       * Unset a blockquote node\n       */\n      unsetBlockquote: () => ReturnType,\n    }\n  }\n}\n\nexport const inputRegex = /^\\s*>\\s$/\n\nexport const Blockquote = Node.create<BlockquoteOptions>({\n\n  name: 'blockquote',\n\n  addOptions() {\n    return {\n      HTMLAttributes: {},\n    }\n  },\n\n  content: 'block+',\n\n  group: 'block',\n\n  defining: true,\n\n  parseHTML() {\n    return [\n      { tag: 'blockquote' },\n    ]\n  },\n\n  renderHTML({ HTMLAttributes }) {\n    return ['blockquote', mergeAttributes(this.options.HTMLAttributes, HTMLAttributes), 0]\n  },\n\n  addCommands() {\n    return {\n      setBlockquote: () => ({ commands }) => {\n        return commands.wrapIn(this.name)\n      },\n      toggleBlockquote: () => ({ commands }) => {\n        return commands.toggleWrap(this.name)\n      },\n      unsetBlockquote: () => ({ commands }) => {\n        return commands.lift(this.name)\n      },\n    }\n  },\n\n  addKeyboardShortcuts() {\n    return {\n      'Mod-Shift-b': () => this.editor.commands.toggleBlockquote(),\n    }\n  },\n\n  addInputRules() {\n    return [\n      wrappingInputRule({\n        find: inputRegex,\n        type: this.type,\n      }),\n    ]\n  },\n})\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}