{"ast":null,"code":"/**\r\n * Copyright (c) Meta Platforms, Inc. and affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\n'use strict';\n\nvar react = require('react');\n\n/**\r\n * Copyright (c) Meta Platforms, Inc. and affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n */\nconst LexicalComposerContext = /*#__PURE__*/react.createContext(null);\nfunction createLexicalComposerContext(parent, theme) {\n  let parentContext = null;\n  if (parent != null) {\n    parentContext = parent[1];\n  }\n  function getTheme() {\n    if (theme != null) {\n      return theme;\n    }\n    return parentContext != null ? parentContext.getTheme() : null;\n  }\n  return {\n    getTheme\n  };\n}\nfunction useLexicalComposerContext() {\n  const composerContext = react.useContext(LexicalComposerContext);\n  if (composerContext == null) {\n    {\n      throw Error(`LexicalComposerContext.useLexicalComposerContext: cannot find a LexicalComposerContext`);\n    }\n  }\n  return composerContext;\n}\nexports.LexicalComposerContext = LexicalComposerContext;\nexports.createLexicalComposerContext = createLexicalComposerContext;\nexports.useLexicalComposerContext = useLexicalComposerContext;","map":{"version":3,"names":["react","require","LexicalComposerContext","createContext","createLexicalComposerContext","parent","theme","parentContext","getTheme","useLexicalComposerContext","composerContext","useContext","Error","exports"],"sources":["C:/Users/petew/OneDrive/Desktop/Web Dev Reboot/react-boat-info/client/node_modules/@lexical/react/LexicalComposerContext.dev.js"],"sourcesContent":["/**\r\n * Copyright (c) Meta Platforms, Inc. and affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n'use strict';\r\n\r\nvar react = require('react');\r\n\r\n/**\r\n * Copyright (c) Meta Platforms, Inc. and affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n */\r\nconst LexicalComposerContext = /*#__PURE__*/react.createContext(null);\r\nfunction createLexicalComposerContext(parent, theme) {\r\n  let parentContext = null;\r\n  if (parent != null) {\r\n    parentContext = parent[1];\r\n  }\r\n  function getTheme() {\r\n    if (theme != null) {\r\n      return theme;\r\n    }\r\n    return parentContext != null ? parentContext.getTheme() : null;\r\n  }\r\n  return {\r\n    getTheme\r\n  };\r\n}\r\nfunction useLexicalComposerContext() {\r\n  const composerContext = react.useContext(LexicalComposerContext);\r\n  if (composerContext == null) {\r\n    {\r\n      throw Error(`LexicalComposerContext.useLexicalComposerContext: cannot find a LexicalComposerContext`);\r\n    }\r\n  }\r\n  return composerContext;\r\n}\r\n\r\nexports.LexicalComposerContext = LexicalComposerContext;\r\nexports.createLexicalComposerContext = createLexicalComposerContext;\r\nexports.useLexicalComposerContext = useLexicalComposerContext;\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;;AAEZ,IAAIA,KAAK,GAAGC,OAAO,CAAC,OAAO,CAAC;;AAE5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMC,sBAAsB,GAAG,aAAaF,KAAK,CAACG,aAAa,CAAC,IAAI,CAAC;AACrE,SAASC,4BAA4B,CAACC,MAAM,EAAEC,KAAK,EAAE;EACnD,IAAIC,aAAa,GAAG,IAAI;EACxB,IAAIF,MAAM,IAAI,IAAI,EAAE;IAClBE,aAAa,GAAGF,MAAM,CAAC,CAAC,CAAC;EAC3B;EACA,SAASG,QAAQ,GAAG;IAClB,IAAIF,KAAK,IAAI,IAAI,EAAE;MACjB,OAAOA,KAAK;IACd;IACA,OAAOC,aAAa,IAAI,IAAI,GAAGA,aAAa,CAACC,QAAQ,EAAE,GAAG,IAAI;EAChE;EACA,OAAO;IACLA;EACF,CAAC;AACH;AACA,SAASC,yBAAyB,GAAG;EACnC,MAAMC,eAAe,GAAGV,KAAK,CAACW,UAAU,CAACT,sBAAsB,CAAC;EAChE,IAAIQ,eAAe,IAAI,IAAI,EAAE;IAC3B;MACE,MAAME,KAAK,CAAE,wFAAuF,CAAC;IACvG;EACF;EACA,OAAOF,eAAe;AACxB;AAEAG,OAAO,CAACX,sBAAsB,GAAGA,sBAAsB;AACvDW,OAAO,CAACT,4BAA4B,GAAGA,4BAA4B;AACnES,OAAO,CAACJ,yBAAyB,GAAGA,yBAAyB"},"metadata":{},"sourceType":"script","externalDependencies":[]}