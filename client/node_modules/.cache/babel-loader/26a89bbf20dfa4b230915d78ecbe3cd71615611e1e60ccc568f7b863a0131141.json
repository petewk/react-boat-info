{"ast":null,"code":"import _objectSpread from \"C:/Users/petew/OneDrive/Desktop/Web Dev Reboot/react-boat-info/client/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _classCallCheck from \"C:/Users/petew/OneDrive/Desktop/Web Dev Reboot/react-boat-info/client/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/petew/OneDrive/Desktop/Web Dev Reboot/react-boat-info/client/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { posToDOMRect, Extension } from '@tiptap/core';\nimport { Plugin, PluginKey } from '@tiptap/pm/state';\nimport tippy from 'tippy.js';\nvar FloatingMenuView = /*#__PURE__*/function () {\n  function FloatingMenuView(_ref) {\n    var _this = this;\n    var editor = _ref.editor,\n      element = _ref.element,\n      view = _ref.view,\n      _ref$tippyOptions = _ref.tippyOptions,\n      tippyOptions = _ref$tippyOptions === void 0 ? {} : _ref$tippyOptions,\n      shouldShow = _ref.shouldShow;\n    _classCallCheck(this, FloatingMenuView);\n    this.preventHide = false;\n    this.shouldShow = function (_ref2) {\n      var view = _ref2.view,\n        state = _ref2.state;\n      var selection = state.selection;\n      var $anchor = selection.$anchor,\n        empty = selection.empty;\n      var isRootDepth = $anchor.depth === 1;\n      var isEmptyTextBlock = $anchor.parent.isTextblock && !$anchor.parent.type.spec.code && !$anchor.parent.textContent;\n      if (!view.hasFocus() || !empty || !isRootDepth || !isEmptyTextBlock || !_this.editor.isEditable) {\n        return false;\n      }\n      return true;\n    };\n    this.mousedownHandler = function () {\n      _this.preventHide = true;\n    };\n    this.focusHandler = function () {\n      // we use `setTimeout` to make sure `selection` is already updated\n      setTimeout(function () {\n        return _this.update(_this.editor.view);\n      });\n    };\n    this.blurHandler = function (_ref3) {\n      var event = _ref3.event;\n      var _a;\n      if (_this.preventHide) {\n        _this.preventHide = false;\n        return;\n      }\n      if ((event === null || event === void 0 ? void 0 : event.relatedTarget) && ((_a = _this.element.parentNode) === null || _a === void 0 ? void 0 : _a.contains(event.relatedTarget))) {\n        return;\n      }\n      _this.hide();\n    };\n    this.tippyBlurHandler = function (event) {\n      _this.blurHandler({\n        event: event\n      });\n    };\n    this.editor = editor;\n    this.element = element;\n    this.view = view;\n    if (shouldShow) {\n      this.shouldShow = shouldShow;\n    }\n    this.element.addEventListener('mousedown', this.mousedownHandler, {\n      capture: true\n    });\n    this.editor.on('focus', this.focusHandler);\n    this.editor.on('blur', this.blurHandler);\n    this.tippyOptions = tippyOptions;\n    // Detaches menu content from its current parent\n    this.element.remove();\n    this.element.style.visibility = 'visible';\n  }\n  _createClass(FloatingMenuView, [{\n    key: \"createTooltip\",\n    value: function createTooltip() {\n      var editorElement = this.editor.options.element;\n      var editorIsAttached = !!editorElement.parentElement;\n      if (this.tippy || !editorIsAttached) {\n        return;\n      }\n      this.tippy = tippy(editorElement, _objectSpread({\n        duration: 0,\n        getReferenceClientRect: null,\n        content: this.element,\n        interactive: true,\n        trigger: 'manual',\n        placement: 'right',\n        hideOnClick: 'toggle'\n      }, this.tippyOptions));\n      // maybe we have to hide tippy on its own blur event as well\n      if (this.tippy.popper.firstChild) {\n        this.tippy.popper.firstChild.addEventListener('blur', this.tippyBlurHandler);\n      }\n    }\n  }, {\n    key: \"update\",\n    value: function update(view, oldState) {\n      var _a, _b, _c;\n      var state = view.state;\n      var doc = state.doc,\n        selection = state.selection;\n      var from = selection.from,\n        to = selection.to;\n      var isSame = oldState && oldState.doc.eq(doc) && oldState.selection.eq(selection);\n      if (isSame) {\n        return;\n      }\n      this.createTooltip();\n      var shouldShow = (_a = this.shouldShow) === null || _a === void 0 ? void 0 : _a.call(this, {\n        editor: this.editor,\n        view: view,\n        state: state,\n        oldState: oldState\n      });\n      if (!shouldShow) {\n        this.hide();\n        return;\n      }\n      (_b = this.tippy) === null || _b === void 0 ? void 0 : _b.setProps({\n        getReferenceClientRect: ((_c = this.tippyOptions) === null || _c === void 0 ? void 0 : _c.getReferenceClientRect) || function () {\n          return posToDOMRect(view, from, to);\n        }\n      });\n      this.show();\n    }\n  }, {\n    key: \"show\",\n    value: function show() {\n      var _a;\n      (_a = this.tippy) === null || _a === void 0 ? void 0 : _a.show();\n    }\n  }, {\n    key: \"hide\",\n    value: function hide() {\n      var _a;\n      (_a = this.tippy) === null || _a === void 0 ? void 0 : _a.hide();\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      var _a, _b;\n      if ((_a = this.tippy) === null || _a === void 0 ? void 0 : _a.popper.firstChild) {\n        this.tippy.popper.firstChild.removeEventListener('blur', this.tippyBlurHandler);\n      }\n      (_b = this.tippy) === null || _b === void 0 ? void 0 : _b.destroy();\n      this.element.removeEventListener('mousedown', this.mousedownHandler, {\n        capture: true\n      });\n      this.editor.off('focus', this.focusHandler);\n      this.editor.off('blur', this.blurHandler);\n    }\n  }]);\n  return FloatingMenuView;\n}();\nvar FloatingMenuPlugin = function FloatingMenuPlugin(options) {\n  return new Plugin({\n    key: typeof options.pluginKey === 'string' ? new PluginKey(options.pluginKey) : options.pluginKey,\n    view: function view(_view) {\n      return new FloatingMenuView(_objectSpread({\n        view: _view\n      }, options));\n    }\n  });\n};\nvar FloatingMenu = Extension.create({\n  name: 'floatingMenu',\n  addOptions: function addOptions() {\n    return {\n      element: null,\n      tippyOptions: {},\n      pluginKey: 'floatingMenu',\n      shouldShow: null\n    };\n  },\n  addProseMirrorPlugins: function addProseMirrorPlugins() {\n    if (!this.options.element) {\n      return [];\n    }\n    return [FloatingMenuPlugin({\n      pluginKey: this.options.pluginKey,\n      editor: this.editor,\n      element: this.options.element,\n      tippyOptions: this.options.tippyOptions,\n      shouldShow: this.options.shouldShow\n    })];\n  }\n});\nexport { FloatingMenu, FloatingMenuPlugin, FloatingMenuView, FloatingMenu as default };","map":{"version":3,"mappings":"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","names":["FloatingMenuView","editor","element","view","tippyOptions","shouldShow","state","selection","$anchor","empty","isRootDepth","depth","isEmptyTextBlock","parent","isTextblock","type","spec","code","textContent","hasFocus","isEditable","preventHide","setTimeout","update","event","relatedTarget","parentNode","contains","hide","blurHandler","addEventListener","mousedownHandler","capture","on","focusHandler","remove","style","visibility","editorElement","options","editorIsAttached","parentElement","tippy","duration","getReferenceClientRect","content","interactive","trigger","placement","hideOnClick","popper","firstChild","tippyBlurHandler","oldState","doc","from","to","isSame","eq","createTooltip","setProps","posToDOMRect","show","removeEventListener","off","FloatingMenuPlugin","Plugin","key","pluginKey","PluginKey","Extension","create","name","addOptions","addProseMirrorPlugins"],"sources":["C:\\Users\\petew\\OneDrive\\Desktop\\Web Dev Reboot\\react-boat-info\\client\\node_modules\\@tiptap\\extension-floating-menu\\src\\floating-menu-plugin.ts","C:\\Users\\petew\\OneDrive\\Desktop\\Web Dev Reboot\\react-boat-info\\client\\node_modules\\@tiptap\\extension-floating-menu\\src\\floating-menu.ts"],"sourcesContent":["import { Editor, posToDOMRect } from '@tiptap/core'\nimport { EditorState, Plugin, PluginKey } from '@tiptap/pm/state'\nimport { EditorView } from '@tiptap/pm/view'\nimport tippy, { Instance, Props } from 'tippy.js'\n\nexport interface FloatingMenuPluginProps {\n  pluginKey: PluginKey | string\n  editor: Editor\n  element: HTMLElement\n  tippyOptions?: Partial<Props>\n  shouldShow?:\n    | ((props: {\n        editor: Editor\n        view: EditorView\n        state: EditorState\n        oldState?: EditorState\n      }) => boolean)\n    | null\n}\n\nexport type FloatingMenuViewProps = FloatingMenuPluginProps & {\n  view: EditorView\n}\n\nexport class FloatingMenuView {\n  public editor: Editor\n\n  public element: HTMLElement\n\n  public view: EditorView\n\n  public preventHide = false\n\n  public tippy: Instance | undefined\n\n  public tippyOptions?: Partial<Props>\n\n  public shouldShow: Exclude<FloatingMenuPluginProps['shouldShow'], null> = ({ view, state }) => {\n    const { selection } = state\n    const { $anchor, empty } = selection\n    const isRootDepth = $anchor.depth === 1\n    const isEmptyTextBlock = $anchor.parent.isTextblock && !$anchor.parent.type.spec.code && !$anchor.parent.textContent\n\n    if (\n      !view.hasFocus()\n      || !empty\n      || !isRootDepth\n      || !isEmptyTextBlock\n      || !this.editor.isEditable\n    ) {\n      return false\n    }\n\n    return true\n  }\n\n  constructor({\n    editor, element, view, tippyOptions = {}, shouldShow,\n  }: FloatingMenuViewProps) {\n    this.editor = editor\n    this.element = element\n    this.view = view\n\n    if (shouldShow) {\n      this.shouldShow = shouldShow\n    }\n\n    this.element.addEventListener('mousedown', this.mousedownHandler, { capture: true })\n    this.editor.on('focus', this.focusHandler)\n    this.editor.on('blur', this.blurHandler)\n    this.tippyOptions = tippyOptions\n    // Detaches menu content from its current parent\n    this.element.remove()\n    this.element.style.visibility = 'visible'\n  }\n\n  mousedownHandler = () => {\n    this.preventHide = true\n  }\n\n  focusHandler = () => {\n    // we use `setTimeout` to make sure `selection` is already updated\n    setTimeout(() => this.update(this.editor.view))\n  }\n\n  blurHandler = ({ event }: { event: FocusEvent }) => {\n    if (this.preventHide) {\n      this.preventHide = false\n\n      return\n    }\n\n    if (event?.relatedTarget && this.element.parentNode?.contains(event.relatedTarget as Node)) {\n      return\n    }\n\n    this.hide()\n  }\n\n  tippyBlurHandler = (event: FocusEvent) => {\n    this.blurHandler({ event })\n  }\n\n  createTooltip() {\n    const { element: editorElement } = this.editor.options\n    const editorIsAttached = !!editorElement.parentElement\n\n    if (this.tippy || !editorIsAttached) {\n      return\n    }\n\n    this.tippy = tippy(editorElement, {\n      duration: 0,\n      getReferenceClientRect: null,\n      content: this.element,\n      interactive: true,\n      trigger: 'manual',\n      placement: 'right',\n      hideOnClick: 'toggle',\n      ...this.tippyOptions,\n    })\n\n    // maybe we have to hide tippy on its own blur event as well\n    if (this.tippy.popper.firstChild) {\n      (this.tippy.popper.firstChild as HTMLElement).addEventListener('blur', this.tippyBlurHandler)\n    }\n  }\n\n  update(view: EditorView, oldState?: EditorState) {\n    const { state } = view\n    const { doc, selection } = state\n    const { from, to } = selection\n    const isSame = oldState && oldState.doc.eq(doc) && oldState.selection.eq(selection)\n\n    if (isSame) {\n      return\n    }\n\n    this.createTooltip()\n\n    const shouldShow = this.shouldShow?.({\n      editor: this.editor,\n      view,\n      state,\n      oldState,\n    })\n\n    if (!shouldShow) {\n      this.hide()\n\n      return\n    }\n\n    this.tippy?.setProps({\n      getReferenceClientRect:\n        this.tippyOptions?.getReferenceClientRect || (() => posToDOMRect(view, from, to)),\n    })\n\n    this.show()\n  }\n\n  show() {\n    this.tippy?.show()\n  }\n\n  hide() {\n    this.tippy?.hide()\n  }\n\n  destroy() {\n    if (this.tippy?.popper.firstChild) {\n      (this.tippy.popper.firstChild as HTMLElement).removeEventListener(\n        'blur',\n        this.tippyBlurHandler,\n      )\n    }\n    this.tippy?.destroy()\n    this.element.removeEventListener('mousedown', this.mousedownHandler, { capture: true })\n    this.editor.off('focus', this.focusHandler)\n    this.editor.off('blur', this.blurHandler)\n  }\n}\n\nexport const FloatingMenuPlugin = (options: FloatingMenuPluginProps) => {\n  return new Plugin({\n    key:\n      typeof options.pluginKey === 'string' ? new PluginKey(options.pluginKey) : options.pluginKey,\n    view: view => new FloatingMenuView({ view, ...options }),\n  })\n}\n","import { Extension } from '@tiptap/core'\n\nimport { FloatingMenuPlugin, FloatingMenuPluginProps } from './floating-menu-plugin'\n\nexport type FloatingMenuOptions = Omit<FloatingMenuPluginProps, 'editor' | 'element'> & {\n  element: HTMLElement | null,\n}\n\nexport const FloatingMenu = Extension.create<FloatingMenuOptions>({\n  name: 'floatingMenu',\n\n  addOptions() {\n    return {\n      element: null,\n      tippyOptions: {},\n      pluginKey: 'floatingMenu',\n      shouldShow: null,\n    }\n  },\n\n  addProseMirrorPlugins() {\n    if (!this.options.element) {\n      return []\n    }\n\n    return [\n      FloatingMenuPlugin({\n        pluginKey: this.options.pluginKey,\n        editor: this.editor,\n        element: this.options.element,\n        tippyOptions: this.options.tippyOptions,\n        shouldShow: this.options.shouldShow,\n      }),\n    ]\n  },\n})\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}